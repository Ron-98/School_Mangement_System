@model SchoolManagementSystem.Models.Student

@{
    ViewBag.Title = "Create";
}



<h3 class="h3-heading">Create a New Student</h3>
<br />
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-2.0.0.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#DOB").datepicker({
                changeMonth: true,
                changeYear:true

            });
        });
    </script>
}

@*@{
    bool nullable = ((Model.Enable == null) || (Model.Enable == false)) ? false : true;
}*@

@using (Ajax.BeginForm("Create", "Student", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "tableBody",
    OnSuccess = "addStudentSuccess",
    OnFailure = "addStudentFailure"
}))
{
    @Html.AntiForgeryToken()
    <div class="container create-form">
        <center>
            <div class="form-horizontal in-form">
                <h4>Student</h4>
                <hr />
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.StdID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StdID, new { htmlAttributes = new { @class = "form-control" } })
                        <span id="stdID-error" class="text-danger"></span>
                        @Html.ValidationMessageFor(model => model.StdID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="editor-field">
                    @Html.DropDownList("Gender", new List<SelectListItem>{
        new SelectListItem{ Text="Male", Value="Male"},
        new SelectListItem{ Text="Female", Value="Female"}
        }, "--- Select ---"
        )
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownList("Gender", new List<SelectListItem>{
                         new SelectListItem{ Text="Male", Value="Male"},
                         new SelectListItem{ Text="Female", Value="Female"},
                         new SelectListItem{ Text=" Others", Value="Others"}
                            }, "--- Select ---", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOB, "{0:mm-dd-yyyy}", new { htmlAttributes = new { @class = "form-control", placeholder = "MM-DD-YYYY" } })
                        
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Enable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="form-check">
                            @Html.CheckBoxFor(model => model.Enable, new { htmlAttributes = new { @class = "form-control form-check-input" } })

                            
                            @*@Html.CheckBoxFor(model=>nullable)*@
                            @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 btn-create-in">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </center>
        <div class="back-button">
            <button class="btn btn-default secondary-btn">@Html.ActionLink("Back to Student", "Index")</button>
        </div>
        <br />


    </div>
}

<br />



<script>
    $(document).ready(function () {
        $('#StdID').change(function () {
            var stdID = $(this).val();
            $.ajax({
                url: '/Student/IsStdIDAvailable',
                type: 'GET',
                data: { stdID: stdID },
                success: function (response) {
                    $('#stdID-error').text(response ? '' : 'StdID already exists.');
                }
            });
        });

    });
</script>




