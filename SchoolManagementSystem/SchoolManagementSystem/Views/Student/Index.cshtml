@model IEnumerable<SchoolManagementSystem.Models.Student>

@{
    ViewBag.Title = "Index";
}

<div class="container create-body">
    <div class="p-heading">
        <h3 class="h3-heading"> Student Details</h3>
    </div>
   <div class="p-button">
        <button class="btn btn-create"> @Html.ActionLink("Create New", "Create") </button>
    </div>
    
</div>

<br />
<table class="table table-hover table-striped table-responsive">
    <thead>
        <tr class="table-heading">
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DOB)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enable)
            </th>
            <th></th>
        </tr>
    </thead>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DOB)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactNo)
        </td>
        <td>
            @*@Html.CheckBoxFor(modelItem => item.Enable)*@
            @if (item.Enable)
            {
                <input type="checkbox" class="form-check-input" onchange="toggleEnable('@item.StdID', this.checked)" checked>
                
            }
            else
            {
                <input type="checkbox" class="btn-check" id="toggleCheckbox" onchange="toggleEnable('@item.StdID', this.checked)">
                
            }
        </td>
        <td>
            <btn type="button" class = "btn btn-warning"><i class="bi bi-pen small-icons"></i> @Html.ActionLink("Edit", "Edit", new { id = item.StdID } ) </btn> |
            <btn class = "btn btn-success"><i class="bi bi-ticket-detailed small-icons"></i> @Html.ActionLink("Details", "Details", new { id = item.StdID } ) </btn> |
            <btn class = "btn btn-danger"><i class="bi bi-trash small-icons"></i> @Html.ActionLink("Delete", "Delete", new { id = item.StdID }) </btn> |
            <btn class = "btn btn-info"><i class="bi bi-info-circle small-icons"></i> @Html.ActionLink("More", "StudentSubjects", new { id = item.StdID }) </btn>
            
        </td>
    </tr>
}

</table>


@section Scripts{

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>


    <script>


        function toggleEnable(id, enable) {
            $.ajax({
                url: '/Student/ToggleEnable',
                type: 'POST',
                data: { id: id, enable: enable },
                success: function (response) {
                    if (response.success) {
                        loadData();
                        Swal.fire('Success!', response.message, 'success');
                    } else {
                        Swal.fire('Error!', response.message, 'error');
                    }
                },
                error: function (error) {
                    console.log(error);
                    Swal.fire('Error!', 'An error occurred while toggling student enable status.', 'error');
                }
            });
        }





        //function deleteStudent(id) {
        //    Swal.fire({
        //        title: 'Are you sure?',
        //        text: "You won't be able to revert this!",
        //        icon: 'warning',
        //        showCancelButton: true,
        //        confirmButtonColor: '#3085d6',
        //        cancelButtonColor: '#d33',
        //        confirmButtonText: 'Yes, delete it!'
        //    }).then((result) => {
        //        if (result.isConfirmed) {
        //            $.ajax({
        //                url: '/Student/DeleteStudent/' + id,
        //                type: 'POST',
        //                success: function (response) {
        //                    if (response.success) {
        //                        $('#tableBody tr:has(td:contains(' + id + '))').remove();
        //                        Swal.fire('Deleted!', 'Record deleted successfully.', 'success');
        //                    } else {
        //                        Swal.fire('Error!', response.message, 'error');
        //                    }
        //                },
        //                error: function (error) {
        //                    console.log(error);
        //                    Swal.fire('Error!', 'An error occurred while deleting the student.', 'error');
        //                }
        //            });
        //        }
        //    });
        //}


    </script>








}